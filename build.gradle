/*
 * This build file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * user guide available at https://docs.gradle.org/3.5/userguide/java_library_plugin.html
 */

// Apply the java-library plugin to add support for Java Library
apply plugin: 'java'
apply plugin: 'java-library'

// In this section you declare where to find the dependencies of your project
repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
    mavenLocal()
    jcenter()
    maven { url 'https://jitpack.io' }
}

dependencies {
    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:21.0'
    implementation group: 'zongzhe', name: 'zongzhe-utils', version: '1.0'

    // Use JUnit test framework
    testImplementation 'junit:junit:4.12'

    testCompile "org.concordion:concordion:2.2.0"
}

test {
//    testLogging.showStandardStreams = true // display test output on concole
//    systemProperties['concordion.output.dir'] = "$reporting.baseDir/spec" // write output to build/reports/spec
//    outputs.upToDateWhen { false }   // force tests to run even if code hasn't changed
}


tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

compileJava.options.encoding = 'UTF-8'

compileTestJava.options.encoding = 'UTF-8'

